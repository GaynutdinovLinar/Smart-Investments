<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
                    xmlns:converter="clr-namespace:Smart_Investments.Views.Converters">
    
    <!--TextBlockInfoContentStyle-->
    <Style x:Key="TextBlockInfoContentStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextSecundaryBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!--UpdateBagButtonStyle-->
    <Style x:Key="UpdateBagButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource SecundaryBackgroundBrushConst}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="30" CornerRadius="6" x:Name="Border" Background="{DynamicResource PrimaryGrayBrush}" Height="30">
                        <StackPanel Orientation="Horizontal">
                            <Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"  Height="15" Width="15" Stretch="Uniform"  Fill="{DynamicResource SecundaryBackgroundBrush}" 
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="7.5 ,0"/>
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" VerticalAlignment="Center" Margin="10,0"/>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource PrimaryBlueBrush}"/>
                            <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource SecundaryBackgroundBrushConst}"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard x:Name="HideStackPanel">
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="30" To="200" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard x:Name="ShowStackPanel">
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="200" To="30" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PeriodRadioButtonStyle-->
    <Style x:Key="PeriodRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="6" x:Name="Grid" Background="{DynamicResource PrimaryGrayBrush}" Width="90" Height="30" Cursor="Hand">
                        <TextBlock Name="TextBlock"  Text="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Cursor" TargetName="Grid" Value="Arrow"/>
                            <Setter Property="Background" TargetName="Grid" Value="{DynamicResource PrimaryBlueBrush}"/>
                            <Setter Property="Foreground" TargetName="TextBlock" Value="{DynamicResource SecundaryBackgroundBrushConst}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LastCostStyle-->
    <Style x:Key="LastCostStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding Path=CurrentCost, Converter={converter:ConvertTextLastCost}}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>


    <!--ChangeCostStyle-->
    <Style x:Key="ChangeCostStyle" TargetType="TextBlock">
        <Setter Property="Foreground">
            <Setter.Value>
                <MultiBinding Converter="{converter:ConvertColorChangeCostMain ColorGrowing={DynamicResource GrowingCostBrush}, 
                    ColorFalling={DynamicResource FallingCostBrush},ColorConst={DynamicResource TextPrimaryBrush}}">
                    <Binding/>
                    <Binding Path="DataContext.Period" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Text">
            <Setter.Value>
                <MultiBinding Converter="{converter:ConvertTextChangeCostBagPage}">
                    <Binding/>
                    <Binding Path="DataContext.Period" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!--ItemBorderStyle-->
    <Style x:Key="ItemBorderStyle" TargetType="Border">
        <Style.Setters>
            <Setter Property="CornerRadius" Value="8,8,8,8"/>
            <Setter Property="Background" Value="{DynamicResource BackPanelBrush}"/>
        </Style.Setters>
    </Style>

    <!--ItemControlStyle-->
    <Style x:Key="ItemsControlBagPageStyle" TargetType="ItemsControl">
        <Setter Property="ItemTemplate" >
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="10" Cursor="Hand">

                        <Border x:Name="BorderBack" Style="{StaticResource ItemBorderStyle}"/>

                        <Grid Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Width="140" Margin="5">
                                <TextBlock Text="{Binding Stock.Shortname}"
                                       Margin="0,0,0,5"
                                       Foreground="{DynamicResource TextPrimaryBrush}"
                                       FontSize="16"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Stock.Secid}"
                                       Foreground="{DynamicResource TextSecundaryBrush}"
                                       FontSize="14"/>
                                    <Path Data="{DynamicResource circle}" Fill="{DynamicResource TextSecundaryBrush}" Width="5" Height="5" VerticalAlignment="Center" Stretch="Fill" Margin="5,0"/>
                                    <TextBlock Text="{Binding StocksCount, StringFormat={}{0} шт.}"
                                       Foreground="{DynamicResource TextSecundaryBrush}"
                                       FontSize="14"/>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Grid.Column="1" Width="140" Margin="5">
                                <TextBlock Style="{StaticResource LastCostStyle}"/>
                                <TextBlock Style="{StaticResource ChangeCostStyle}"/>
                            </StackPanel>
                        </Grid>

                        <Grid.InputBindings>
                            <MouseBinding
                                MouseAction="LeftClick"
                                Command="{Binding Path=DataContext.Stock_Click, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"/>
                        </Grid.InputBindings>

                    </Grid>

                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderBack" Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect Opacity="0.3" Softness="0.3" Direction="330" Color="{DynamicResource TextSecundaryColor}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </DataTemplate.Triggers>

                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ColumnHeaderGripperStyle-->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <!--DataGridColumnHeaderStyle-->
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource SecundaryBlueBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <DockPanel >
                        <Border Background="{TemplateBinding Background}" Cursor="Hand" CornerRadius="5,5,0,0" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource TextSecundaryBrush}">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                <Path x:Name="Icon" Grid.Column="1" Visibility="Hidden" Fill="{DynamicResource TextPrimaryBrush}" Stretch="Uniform" Width="10" Height="10" VerticalAlignment="Center"
                                      HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter Property="Visibility" TargetName="Icon" Value="Visible"/>
                            <Setter Property="Data" TargetName="Icon" Value="{DynamicResource arrowUp}"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter Property="Visibility" TargetName="Icon" Value="Visible"/>
                            <Setter Property="Data" TargetName="Icon" Value="{DynamicResource arrowDown}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--DataGridRowStyle-->
    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--DataGriStyle-->
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextSecundaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BackPanelBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border>
                        <DockPanel>
                            <DataGridColumnHeadersPresenter DockPanel.Dock="Top" x:Name="PART_ColumnHeadersPresenter" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            <Border CornerRadius="0,0,5,5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <Grid>
                                    <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Style="{DynamicResource CustomMiniScrollViewer}">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="False"/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--DataGridCellStyle-->
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--ItemsControlColumnStyle-->
    <Style x:Key="ItemsControlColumnStyle" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>