<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf">

    <!--ToggleButtonStockPageStyle-->
    <Style x:Key="ToggleButtonStockPageStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            
                            <TextBlock Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Foreground="{DynamicResource TextPrimaryBrush}"
                                       FontSize="16" FontWeight="DemiBold" />
                            <Path x:Name="Icon" Data="{DynamicResource chevronDown}"  Height="7" Width="7" Stretch="Uniform"  
                                  Fill="{DynamicResource TextPrimaryBrush}" 
                              VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0"/>

                        </StackPanel>
                        
                        

                        <Border x:Name="Border" Visibility="Hidden" Background="{DynamicResource PrimaryBackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource PrimaryGrayBrush}">
                            <ItemsControl ItemsSource="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" >

                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                                                      Style="{DynamicResource CustomMiniScrollViewer}">
                                            <ItemsPresenter></ItemsPresenter>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ItemsControl.Template>

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding Path=Command, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" CommandParameter="{Binding}">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border x:Name="BorderElement" Background="Transparent" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource PrimaryGrayBrush}">
                                                        <TextBlock x:Name="TextBlock" Text="{Binding}" Margin="8,0" FontSize="14" Foreground="{DynamicResource TextSecundaryBrush}"/>
                                                    </Border>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="BorderElement" Property="Background" Value="{DynamicResource SecundaryBlueBrush}"/>
                                                            <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Border>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--StockRadioButtonHorizontalStyle-->
    <Style x:Key="StockRadioButtonHorizontalStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" BorderBrush="{DynamicResource PrimaryGrayBrush}"
                            
                            CornerRadius="5,5,5,5" Height="30" Width="30" VerticalAlignment="Center" HorizontalAlignment="Center" >

                        <TextBlock x:Name="Content"  Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="DemiBold"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource PrimaryBlueBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryBlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource PrimaryBlueBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PrimaryTextBlockStyle-->
    <Style x:Key="TextBlockBorderFirstStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    
    <!--TitleTextBlockStyle-->
    <Style x:Key="TitleTextBlockBorderFirstStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextSecundaryBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
    </Style>


    <!--IconButtonStyle-->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryGrayBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecundaryBackgroundBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource PrimaryGrayBrush}"  
                            CornerRadius="5,5,5,5">

                        <Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"  Height="20" Width="20" Stretch="Uniform"  Fill="{DynamicResource SecundaryBackgroundBrush}" 
                              VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>


    <!--BorderStyle-->
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackPanelBrush}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>

    <!--MainLineSeriesStyle-->
    <Style x:Key="MainLineSeriesStyle" TargetType="lvc:LineSeries">
        <Setter Property="PointGeometrySize" Value="7"/>
        <Setter Property="Stroke" Value="{DynamicResource PrimaryBlueBrush}"/>
        <Setter Property="LineSmoothness" Value="0"/>
        <Setter Property="Fill">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource PrimaryBlueColor}" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MainCandleSeriesStyle-->
    <Style x:Key="MainCandleSeriesStyle" TargetType="lvc:CandleSeries">
        <Setter Property="DecreaseBrush" Value="{DynamicResource FallingCostBrush}"/>
        <Setter Property="IncreaseBrush" Value="{DynamicResource GrowingCostBrush}"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="Stroke" Value="{DynamicResource PrimaryBlueBrush}"/>
        <Setter Property="Fill">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource PrimaryBlueColor}" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MALineSeriesStyle-->
    <Style x:Key="MALineSeriesStyle" TargetType="lvc:LineSeries">
        <Setter Property="Panel.ZIndex" Value="2"/>
        <Setter Property="PointGeometrySize" Value="0"/>
        <Setter Property="Fill" Value="Transparent"/>
        <Setter Property="StrokeThickness" Value="2"/>
    </Style>

    <!--MaxSeriesStyle-->
    <Style x:Key="MaxSeriesStyle" TargetType="lvc:LineSeries">
        <Setter Property="Panel.ZIndex" Value="2"/>
        <Setter Property="Title" Value="Макс. значение"/>
        <Setter Property="PointForeground" Value="{DynamicResource SecundaryBackgroundBrush}"/>
        <Setter Property="Stroke" Value="{DynamicResource GrowingCostBrush}"/>
        <Setter Property="Fill" Value="Transparent"/>
    </Style>

    <!--MinSeriesStyle-->
    <Style x:Key="MinSeriesStyle" TargetType="lvc:LineSeries">
        <Setter Property="Panel.ZIndex" Value="2"/>
        <Setter Property="Title" Value="Мин. значение"/>
        <Setter Property="PointForeground" Value="{DynamicResource SecundaryBackgroundBrush}"/>
        <Setter Property="Stroke" Value="{DynamicResource FallingCostBrush}"/>
        <Setter Property="Fill" Value="Transparent"/>
    </Style>



</ResourceDictionary>