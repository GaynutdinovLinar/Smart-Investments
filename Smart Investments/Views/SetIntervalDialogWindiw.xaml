<Window x:Class="Smart_Investments.Views.SetIntervalDialogWindiw"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:rules="clr-namespace:Smart_Investments.Views.ValidationRules"
        xmlns:converter="clr-namespace:Smart_Investments.Views.Converters" 
        xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        mc:Ignorable="d"  Width="400" Height="260"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize" ShowInTaskbar="True"
        WindowStyle="None">

    <Window.Style>
        <Style>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome  
                        GlassFrameThickness="10"
                        ResizeBorderThickness="5"
                        CaptionHeight="32"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

    <Border>
        <DockPanel Background="{DynamicResource PrimaryBackgroundBrushConst}">

            <!-- Start: Button Close | Restore | Minimize -->
            <Grid DockPanel.Dock="Top">
                <TextBlock Text="Moving Average" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Margin="20,0,0,0" FontWeight="DemiBold" FontSize="14" Foreground="{DynamicResource TextPrimaryConstBrush}"/>

                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft"
                            WindowChrome.IsHitTestVisibleInChrome="True">


                    <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Tag="IsCloseButton" Click="btnClose_Click"/>

                </StackPanel>
            </Grid>
            <!-- End: Button Close | Restore | Minimize -->

            <Grid Background="{DynamicResource SecundaryBackgroundBrushConst}">

                <Grid Margin="20">
                    <StackPanel Orientation="Vertical" Margin="10">


                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0">
                                <StackPanel Orientation="Horizontal" Margin="0,25,0,0">
                                    <TextBlock Text="MA:" FontSize="13" Foreground="{DynamicResource TextSecundaryConstBrush}" 
                                           Margin="0,0,5,0" VerticalAlignment="Center"/>
                                    <ComboBox Width="110" ItemsSource="{Binding AllVariantsMA}" SelectedItem="{Binding IntroMA}"   HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Title}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                                    <TextBlock Text="Цвет:" FontSize="13" Foreground="{DynamicResource TextSecundaryConstBrush}" 
                                           Margin="0,0,5,0" VerticalAlignment="Center"/>
                                    <toolkit:ColorPicker Width="50" SelectedColor="{Binding IntroColor}"  Margin="5,0,0,0"/>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Grid.Column="1">
                                <TextBlock Foreground="{DynamicResource FallingCostBrush}" Height="25" Text="{Binding  ElementName=IntervalTextBox,Converter={converter:ConverterErrorValidation}, Path=(Validation.Errors)}" 
                                       Width="200"/>
                                <TextBox x:Name="IntervalTextBox" Background="{DynamicResource PrimaryBackgroundBrushConst}"  Width="110" Style="{DynamicResource TextBoxFilterStyle}" 
                                         Tag="Интервал"  Foreground="{DynamicResource TextPrimaryConstBrush}">
                                    <TextBox.Text>
                                        <Binding Path="IntroIntervalMA" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <rules:MinMaxIntRule/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>
                        </Grid>

                        <Button Content="Добавить" Foreground="{DynamicResource SecundaryBackgroundBrushConst}" Command="{Binding AddIndicatorClick}" Style="{DynamicResource FilterButtonStyle}" Margin="0,30,0,0" FontSize="13"/>
                    
                    </StackPanel>
                </Grid>

            </Grid>

        </DockPanel>
    </Border>
</Window>
